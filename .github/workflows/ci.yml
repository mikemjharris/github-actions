name: CI 
on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output1:  ${{ steps.step1.outputs.test }} 
      output2:  ${{ steps.step2.outputs.test }} 
    strategy:
      fail-fast: false # This means the whole matrix runs in parrallel and finishes all parts
      matrix:
        tag: ['@OPTEDOUTUS', '@ILD', '@WAYES', '@BFNEDIT'] # these seem the most stable so using them for now
        # tag: ['@AMAZONPAYQUICK', '@BFNFR', '@ILY', '@OPTEDOUTUS', '@BFNEDIT', '@WAYDE'] this is the aim
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 10.16.3
      - name: Setup variables and relevevant directories for reports and screen shots. 
        run: |
          echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
          echo "::set-output name=action_fruit::strawberry"
          echo "::set-output name=TAG::${{ matrix.tag }}" 
          echo "::set-output name=${{ matrix.tag }}::PASS"
          echo "::set-env name=TTTTY::test-sync/e2e-scheduled/$GITHUB_SHA/$GITHUB_RUN_NUMBER/E2E" 
          echo "::set-env name=$GITHUB_SHA::test-sync/e2e-scheduled/$GITHUB_SHA/$GITHUB_RUN_NUMBER/E2E" 
          echo ${{needs.job1.outputs.output1}}
      - id: step1
        run: echo "::set-output name=test::hello"
      - id: step2  
        run: echo "::set-output name=${{ matrix.tag }}::test"
          


  build:
    runs-on: ubuntu-latest
    needs: job1 
    steps:
      - uses: actions/checkout@v2
      - name: Run a one-line script
        run: ls
      - name: Run a multi-line script
        run: |
          echo "::set-env name=REPORT_PATH::test-sync/e2e-scheduled/$GITHUB_SHA/$GITHUB_RUN_NUMBER/E2E" 
          echo ${{needs.ci-e2e.outputs.matrix}} 
          echo ${{needs.ci-e2e.outputs.TAG}}
          echo ${{needs.ci-e2e.outputs.action_fruit}}
          echo ${{needs.ci-e2e.outputs.ILD}}
          echo $TTTY
          echo env 
          echo needs 
          echo ${{env}}
          echo ${{ needs.job1.result }}
      - name: Output results 
        run: echo ${{needs.job1.outputs.output1}}
      - name: Output results 2
        run: echo ${{needs.job1.outputs.output2}}
      - name: Output results 2
        run: echo ${{needs.job1.outputs}}
      - name: Output results 2
        run: echo ${{needs.job1.needs}}
